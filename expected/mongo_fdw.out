CREATE SERVER mongo_server FOREIGN DATA WRAPPER mongo_fdw OPTIONS (address '127.0.0.1', port '27017');
\! mongoimport --db mongo_fdw_regress --collection countries --jsonArray --drop --quiet < data/mongo_fixture.json
CREATE USER MAPPING FOR postgres SERVER mongo_server;
CREATE FOREIGN TABLE department(_id NAME, department_id int, department_name text) SERVER mongo_server OPTIONS(database 'testdb', collection 'department');
CREATE FOREIGN TABLE employee(_id NAME, emp_id int, emp_name text, emp_dept_id int) SERVER mongo_server OPTIONS(database 'testdb', collection 'employee');
INSERT INTO department VALUES(0, generate_series(1,100), 'dept - ' || generate_series(1,100));
INSERT INTO employee VALUES(0, generate_series(1,100), 'emp - ' || generate_series(1,100), generate_series(1,100));
SELECT count(*) FROM department;
 count 
-------
   100
(1 row)

SELECT count(*) FROM employee;
 count 
-------
   100
(1 row)

EXPLAIN (COSTS FALSE) SELECT emp_id , emp_name , emp_dept_id, department_id , department_name  FROM department d, employee e WHERE d.department_id = e.emp_dept_id LIMIT 10;
                       QUERY PLAN                       
--------------------------------------------------------
 Limit
   ->  Hash Join
         Hash Cond: (d.department_id = e.emp_dept_id)
         ->  Foreign Scan on department d
               Foreign Namespace: testdb.department
         ->  Hash
               ->  Foreign Scan on employee e
                     Foreign Namespace: testdb.employee
(8 rows)

EXPLAIN (COSTS FALSE) SELECT emp_id , emp_name , emp_dept_id, department_id , department_name FROM department d, employee e WHERE d.department_id IN (SELECT department_id FROM department) LIMIT 10;
                               QUERY PLAN                                
-------------------------------------------------------------------------
 Limit
   ->  Nested Loop
         ->  Nested Loop Semi Join
               Join Filter: (d.department_id = department.department_id)
               ->  Foreign Scan on department d
                     Foreign Namespace: testdb.department
               ->  Materialize
                     ->  Foreign Scan on department
                           Foreign Namespace: testdb.department
         ->  Materialize
               ->  Foreign Scan on employee e
                     Foreign Namespace: testdb.employee
(12 rows)

SELECT emp_id , emp_name , emp_dept_id, department_id , department_name FROM department d, employee e WHERE d.department_id = e.emp_dept_id LIMIT 10;
 emp_id | emp_name | emp_dept_id | department_id | department_name 
--------+----------+-------------+---------------+-----------------
     39 | emp - 39 |          39 |            39 | dept - 39
     40 | emp - 40 |          40 |            40 | dept - 40
     41 | emp - 41 |          41 |            41 | dept - 41
     42 | emp - 42 |          42 |            42 | dept - 42
     43 | emp - 43 |          43 |            43 | dept - 43
     44 | emp - 44 |          44 |            44 | dept - 44
     45 | emp - 45 |          45 |            45 | dept - 45
     46 | emp - 46 |          46 |            46 | dept - 46
     47 | emp - 47 |          47 |            47 | dept - 47
     48 | emp - 48 |          48 |            48 | dept - 48
(10 rows)

SELECT emp_id , emp_name , emp_dept_id, department_id , department_name FROM department d, employee e WHERE d.department_id IN (SELECT department_id FROM department) LIMIT 10;
 emp_id | emp_name | emp_dept_id | department_id | department_name 
--------+----------+-------------+---------------+-----------------
     38 | emp - 38 |          38 |            39 | dept - 39
     39 | emp - 39 |          39 |            39 | dept - 39
     40 | emp - 40 |          40 |            39 | dept - 39
     41 | emp - 41 |          41 |            39 | dept - 39
     42 | emp - 42 |          42 |            39 | dept - 39
     43 | emp - 43 |          43 |            39 | dept - 39
     44 | emp - 44 |          44 |            39 | dept - 39
     45 | emp - 45 |          45 |            39 | dept - 39
     46 | emp - 46 |          46 |            39 | dept - 39
     47 | emp - 47 |          47 |            39 | dept - 39
(10 rows)

DELETE FROM employee WHERE emp_id = 10;
UPDATE employee SET emp_name = 'Updated emp' WHERE emp_id = 20;
SELECT emp_id, emp_name FROM employee WHERE emp_name like 'Updated emp';
 emp_id |  emp_name   
--------+-------------
     20 | Updated emp
(1 row)

SELECT emp_id , emp_name , emp_dept_id FROM employee LIMIT 10;
 emp_id | emp_name | emp_dept_id 
--------+----------+-------------
     38 | emp - 38 |          38
     39 | emp - 39 |          39
     40 | emp - 40 |          40
     41 | emp - 41 |          41
     42 | emp - 42 |          42
     43 | emp - 43 |          43
     44 | emp - 44 |          44
     45 | emp - 45 |          45
     46 | emp - 46 |          46
     47 | emp - 47 |          47
(10 rows)

SELECT emp_id , emp_name , emp_dept_id FROM employee WHERE emp_id IN (1);
 emp_id | emp_name | emp_dept_id 
--------+----------+-------------
      1 | emp - 1  |           1
(1 row)

SELECT emp_id , emp_name , emp_dept_id FROM employee WHERE emp_id IN (1,3,4,5);
 emp_id | emp_name | emp_dept_id 
--------+----------+-------------
      1 | emp - 1  |           1
      3 | emp - 3  |           3
      4 | emp - 4  |           4
      5 | emp - 5  |           5
(4 rows)

SELECT emp_id , emp_name , emp_dept_id FROM employee WHERE emp_id IN (10000,1000);
 emp_id | emp_name | emp_dept_id 
--------+----------+-------------
(0 rows)

SELECT emp_id , emp_name , emp_dept_id FROM employee WHERE emp_id NOT IN (1) LIMIT 5;
 emp_id | emp_name | emp_dept_id 
--------+----------+-------------
     38 | emp - 38 |          38
     39 | emp - 39 |          39
     40 | emp - 40 |          40
     41 | emp - 41 |          41
     42 | emp - 42 |          42
(5 rows)

SELECT emp_id , emp_name , emp_dept_id FROM employee WHERE emp_id NOT IN (1,3,4,5) LIMIT 5;
 emp_id | emp_name | emp_dept_id 
--------+----------+-------------
     38 | emp - 38 |          38
     39 | emp - 39 |          39
     40 | emp - 40 |          40
     41 | emp - 41 |          41
     42 | emp - 42 |          42
(5 rows)

SELECT emp_id , emp_name , emp_dept_id FROM employee WHERE emp_id NOT IN (10000,1000) LIMIT 5;
 emp_id | emp_name | emp_dept_id 
--------+----------+-------------
     38 | emp - 38 |          38
     39 | emp - 39 |          39
     40 | emp - 40 |          40
     41 | emp - 41 |          41
     42 | emp - 42 |          42
(5 rows)

SELECT emp_id , emp_name , emp_dept_id FROM employee WHERE emp_id NOT IN (SELECT emp_id FROM employee WHERE emp_id IN (1,10));
 emp_id |  emp_name   | emp_dept_id 
--------+-------------+-------------
     38 | emp - 38    |          38
     39 | emp - 39    |          39
     40 | emp - 40    |          40
     41 | emp - 41    |          41
     42 | emp - 42    |          42
     43 | emp - 43    |          43
     44 | emp - 44    |          44
     45 | emp - 45    |          45
     46 | emp - 46    |          46
     47 | emp - 47    |          47
     48 | emp - 48    |          48
     49 | emp - 49    |          49
     50 | emp - 50    |          50
     51 | emp - 51    |          51
     52 | emp - 52    |          52
     53 | emp - 53    |          53
     54 | emp - 54    |          54
     55 | emp - 55    |          55
     56 | emp - 56    |          56
     57 | emp - 57    |          57
     58 | emp - 58    |          58
     59 | emp - 59    |          59
     60 | emp - 60    |          60
     61 | emp - 61    |          61
     62 | emp - 62    |          62
     63 | emp - 63    |          63
     64 | emp - 64    |          64
     65 | emp - 65    |          65
     66 | emp - 66    |          66
     67 | emp - 67    |          67
     68 | emp - 68    |          68
     69 | emp - 69    |          69
     70 | emp - 70    |          70
     71 | emp - 71    |          71
     72 | emp - 72    |          72
     73 | emp - 73    |          73
     74 | emp - 74    |          74
     75 | emp - 75    |          75
     76 | emp - 76    |          76
     77 | emp - 77    |          77
     78 | emp - 78    |          78
     79 | emp - 79    |          79
     80 | emp - 80    |          80
     81 | emp - 81    |          81
     82 | emp - 82    |          82
     83 | emp - 83    |          83
     84 | emp - 84    |          84
     85 | emp - 85    |          85
     86 | emp - 86    |          86
     87 | emp - 87    |          87
     88 | emp - 88    |          88
     89 | emp - 89    |          89
     90 | emp - 90    |          90
     91 | emp - 91    |          91
     92 | emp - 92    |          92
     93 | emp - 93    |          93
     94 | emp - 94    |          94
     95 | emp - 95    |          95
     96 | emp - 96    |          96
     97 | emp - 97    |          97
     98 | emp - 98    |          98
     99 | emp - 99    |          99
      2 | emp - 2     |           2
      3 | emp - 3     |           3
      4 | emp - 4     |           4
      5 | emp - 5     |           5
      6 | emp - 6     |           6
      7 | emp - 7     |           7
      8 | emp - 8     |           8
      9 | emp - 9     |           9
     11 | emp - 11    |          11
     12 | emp - 12    |          12
     13 | emp - 13    |          13
     14 | emp - 14    |          14
     15 | emp - 15    |          15
     16 | emp - 16    |          16
     17 | emp - 17    |          17
     18 | emp - 18    |          18
     19 | emp - 19    |          19
     20 | Updated emp |          20
     21 | emp - 21    |          21
     22 | emp - 22    |          22
     23 | emp - 23    |          23
     24 | emp - 24    |          24
     25 | emp - 25    |          25
     26 | emp - 26    |          26
     27 | emp - 27    |          27
     28 | emp - 28    |          28
     29 | emp - 29    |          29
     30 | emp - 30    |          30
     31 | emp - 31    |          31
     32 | emp - 32    |          32
     33 | emp - 33    |          33
     34 | emp - 34    |          34
     35 | emp - 35    |          35
     36 | emp - 36    |          36
     37 | emp - 37    |          37
    100 | emp - 100   |         100
(98 rows)

SELECT emp_id , emp_name , emp_dept_id FROM employee WHERE emp_name NOT IN ('emp - 1', 'emp - 2') LIMIT 5;
 emp_id | emp_name | emp_dept_id 
--------+----------+-------------
     38 | emp - 38 |          38
     39 | emp - 39 |          39
     40 | emp - 40 |          40
     41 | emp - 41 |          41
     42 | emp - 42 |          42
(5 rows)

SELECT emp_id , emp_name , emp_dept_id FROM employee WHERE emp_name NOT IN ('emp - 10') LIMIT 5;
 emp_id | emp_name | emp_dept_id 
--------+----------+-------------
     38 | emp - 38 |          38
     39 | emp - 39 |          39
     40 | emp - 40 |          40
     41 | emp - 41 |          41
     42 | emp - 42 |          42
(5 rows)

DELETE FROM employee;
DELETE FROM department;
CREATE FOREIGN TABLE countries (
_id NAME,
name VARCHAR,
population INTEGER,
capital VARCHAR,
hdi FLOAT
) SERVER mongo_server OPTIONS (database 'mongo_fdw_regress', collection 'countries');
SELECT * FROM countries;
           _id            |  name   | population | capital  |  hdi  
--------------------------+---------+------------+----------+-------
 5381ccf9d6d81c8e8bf0434f | Ukraine |   45590000 | Kyiv     |  0.74
 5381ccf9d6d81c8e8bf04350 | Poland  |   38540000 | Warsaw   | 0.821
 5381ccf9d6d81c8e8bf04351 | Moldova |    3560000 | Chișinău |  0.66
(3 rows)

-- 
-- Subfields and dates
CREATE FOREIGN TABLE country_elections (
_id NAME,
"lastElections.type" VARCHAR,
"lastElections.date" TIMESTAMP
) SERVER mongo_server OPTIONS (database 'mongo_fdw_regress', collection 'countries');
SELECT * FROM country_elections;
           _id            | lastElections.type |      lastElections.date      
--------------------------+--------------------+------------------------------
 5381ccf9d6d81c8e8bf0434f | presedential       | Sat Jan 10 10:51:01.504 1970
 5381ccf9d6d81c8e8bf04350 | parliamentary      | Fri Dec 26 22:44:00.128 1969
 5381ccf9d6d81c8e8bf04351 | parliamentary      | Wed Dec 10 05:00:43.904 1969
(3 rows)

-- 
-- Arrays
CREATE FOREIGN TABLE main_exports (
_id NAME,
"mainExports" TEXT[]
) SERVER mongo_server OPTIONS (database 'mongo_fdw_regress', collection 'countries');
SELECT * FROM main_exports;
           _id            |                                                                                         mainExports                                                                                         
--------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 5381ccf9d6d81c8e8bf0434f | {"Semi-finished products of iron or non-alloy steel","Flat-rolled products of iron or non-alloy steel","Sunflower-seed, safflower or cotton-seed oil"}
 5381ccf9d6d81c8e8bf04350 | {"Parts and accessories of the motor vehicles of headings 87.01 to 87.0","Motor cars and other motor vehicles principally designed for the transport","Reception apparatus for television"}
 5381ccf9d6d81c8e8bf04351 | {"Wine of fresh grapes, including fortified wines","Insulated (including enamelled or anodised) wire, cable","Sunflower seeds, whether or not broken"}
(3 rows)

DROP FOREIGN TABLE department;
DROP FOREIGN TABLE employee;
DROP FOREIGN TABLE countries;
DROP FOREIGN TABLE country_elections;
DROP FOREIGN TABLE main_exports;
DROP USER MAPPING FOR postgres SERVER mongo_server;
DROP EXTENSION mongo_fdw CASCADE;
NOTICE:  drop cascades to server mongo_server
