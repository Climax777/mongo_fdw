\c postgres postgres
CREATE EXTENSION mongo_fdw;
CREATE SERVER mongo_server FOREIGN DATA WRAPPER mongo_fdw OPTIONS (address '127.0.0.1', port '27017');
\! mongoimport --db mongo_fdw_regress --collection countries --jsonArray --drop --maintainInsertionOrder --host='127.0.0.1' --port=27017 --quiet < data/mongo_fixture.json
CREATE USER MAPPING FOR postgres SERVER mongo_server;
CREATE FOREIGN TABLE department(_id NAME, department_id int, department_name text) SERVER mongo_server OPTIONS(database 'testdb', collection 'department');
CREATE FOREIGN TABLE employee(_id NAME, emp_id int, emp_name text, emp_dept_id int) SERVER mongo_server OPTIONS(database 'testdb', collection 'employee');
INSERT INTO department SELECT 0, i, 'dept - ' || i FROM generate_series(1,10) i;
INSERT INTO employee SELECT 0, i, 'emp - ' || i, (i - 1)%10 + 1 FROM generate_series(1,100) i;
SELECT count(*) FROM department;
 count 
-------
    10
(1 row)

SELECT count(*) FROM employee;
 count 
-------
   100
(1 row)

EXPLAIN (COSTS FALSE) SELECT emp_id , emp_name , emp_dept_id, department_id , department_name  FROM department d, employee e WHERE d.department_id = e.emp_dept_id ORDER by emp_id;
                        QUERY PLAN                        
----------------------------------------------------------
 Sort
   Sort Key: e.emp_id
   ->  Merge Join
         Merge Cond: (d.department_id = e.emp_dept_id)
         ->  Sort
               Sort Key: d.department_id
               ->  Foreign Scan on department d
                     Foreign Namespace: testdb.department
         ->  Sort
               Sort Key: e.emp_dept_id
               ->  Foreign Scan on employee e
                     Foreign Namespace: testdb.employee
(12 rows)

EXPLAIN (COSTS FALSE) SELECT emp_id , emp_name , emp_dept_id, department_id , department_name FROM department d, employee e WHERE d.department_id IN (SELECT department_id FROM department) ORDER by emp_id;
                              QUERY PLAN                              
----------------------------------------------------------------------
 Sort
   Sort Key: e.emp_id
   ->  Merge Join
         Merge Cond: (department.department_id = d.department_id)
         ->  Sort
               Sort Key: department.department_id
               ->  Nested Loop
                     ->  HashAggregate
                           Group Key: department.department_id
                           ->  Foreign Scan on department
                                 Foreign Namespace: testdb.department
                     ->  Foreign Scan on employee e
                           Foreign Namespace: testdb.employee
         ->  Sort
               Sort Key: d.department_id
               ->  Foreign Scan on department d
                     Foreign Namespace: testdb.department
(17 rows)

SELECT emp_id , emp_name , emp_dept_id, department_id , department_name FROM department d, employee e WHERE d.department_id = e.emp_dept_id AND e.emp_dept_id > 5 ORDER by emp_id, department_id;
 emp_id | emp_name  | emp_dept_id | department_id | department_name 
--------+-----------+-------------+---------------+-----------------
      6 | emp - 6   |           6 |             6 | dept - 6
      7 | emp - 7   |           7 |             7 | dept - 7
      8 | emp - 8   |           8 |             8 | dept - 8
      9 | emp - 9   |           9 |             9 | dept - 9
     10 | emp - 10  |          10 |            10 | dept - 10
     16 | emp - 16  |           6 |             6 | dept - 6
     17 | emp - 17  |           7 |             7 | dept - 7
     18 | emp - 18  |           8 |             8 | dept - 8
     19 | emp - 19  |           9 |             9 | dept - 9
     20 | emp - 20  |          10 |            10 | dept - 10
     26 | emp - 26  |           6 |             6 | dept - 6
     27 | emp - 27  |           7 |             7 | dept - 7
     28 | emp - 28  |           8 |             8 | dept - 8
     29 | emp - 29  |           9 |             9 | dept - 9
     30 | emp - 30  |          10 |            10 | dept - 10
     36 | emp - 36  |           6 |             6 | dept - 6
     37 | emp - 37  |           7 |             7 | dept - 7
     38 | emp - 38  |           8 |             8 | dept - 8
     39 | emp - 39  |           9 |             9 | dept - 9
     40 | emp - 40  |          10 |            10 | dept - 10
     46 | emp - 46  |           6 |             6 | dept - 6
     47 | emp - 47  |           7 |             7 | dept - 7
     48 | emp - 48  |           8 |             8 | dept - 8
     49 | emp - 49  |           9 |             9 | dept - 9
     50 | emp - 50  |          10 |            10 | dept - 10
     56 | emp - 56  |           6 |             6 | dept - 6
     57 | emp - 57  |           7 |             7 | dept - 7
     58 | emp - 58  |           8 |             8 | dept - 8
     59 | emp - 59  |           9 |             9 | dept - 9
     60 | emp - 60  |          10 |            10 | dept - 10
     66 | emp - 66  |           6 |             6 | dept - 6
     67 | emp - 67  |           7 |             7 | dept - 7
     68 | emp - 68  |           8 |             8 | dept - 8
     69 | emp - 69  |           9 |             9 | dept - 9
     70 | emp - 70  |          10 |            10 | dept - 10
     76 | emp - 76  |           6 |             6 | dept - 6
     77 | emp - 77  |           7 |             7 | dept - 7
     78 | emp - 78  |           8 |             8 | dept - 8
     79 | emp - 79  |           9 |             9 | dept - 9
     80 | emp - 80  |          10 |            10 | dept - 10
     86 | emp - 86  |           6 |             6 | dept - 6
     87 | emp - 87  |           7 |             7 | dept - 7
     88 | emp - 88  |           8 |             8 | dept - 8
     89 | emp - 89  |           9 |             9 | dept - 9
     90 | emp - 90  |          10 |            10 | dept - 10
     96 | emp - 96  |           6 |             6 | dept - 6
     97 | emp - 97  |           7 |             7 | dept - 7
     98 | emp - 98  |           8 |             8 | dept - 8
     99 | emp - 99  |           9 |             9 | dept - 9
    100 | emp - 100 |          10 |            10 | dept - 10
(50 rows)

SELECT emp_id , emp_name , emp_dept_id, department_id , department_name FROM department d, employee e WHERE d.department_id IN (SELECT department_id FROM department WHERE department_id < 3) ORDER by emp_id, department_id;
 emp_id | emp_name  | emp_dept_id | department_id | department_name 
--------+-----------+-------------+---------------+-----------------
      1 | emp - 1   |           1 |             1 | dept - 1
      1 | emp - 1   |           1 |             2 | dept - 2
      2 | emp - 2   |           2 |             1 | dept - 1
      2 | emp - 2   |           2 |             2 | dept - 2
      3 | emp - 3   |           3 |             1 | dept - 1
      3 | emp - 3   |           3 |             2 | dept - 2
      4 | emp - 4   |           4 |             1 | dept - 1
      4 | emp - 4   |           4 |             2 | dept - 2
      5 | emp - 5   |           5 |             1 | dept - 1
      5 | emp - 5   |           5 |             2 | dept - 2
      6 | emp - 6   |           6 |             1 | dept - 1
      6 | emp - 6   |           6 |             2 | dept - 2
      7 | emp - 7   |           7 |             1 | dept - 1
      7 | emp - 7   |           7 |             2 | dept - 2
      8 | emp - 8   |           8 |             1 | dept - 1
      8 | emp - 8   |           8 |             2 | dept - 2
      9 | emp - 9   |           9 |             1 | dept - 1
      9 | emp - 9   |           9 |             2 | dept - 2
     10 | emp - 10  |          10 |             1 | dept - 1
     10 | emp - 10  |          10 |             2 | dept - 2
     11 | emp - 11  |           1 |             1 | dept - 1
     11 | emp - 11  |           1 |             2 | dept - 2
     12 | emp - 12  |           2 |             1 | dept - 1
     12 | emp - 12  |           2 |             2 | dept - 2
     13 | emp - 13  |           3 |             1 | dept - 1
     13 | emp - 13  |           3 |             2 | dept - 2
     14 | emp - 14  |           4 |             1 | dept - 1
     14 | emp - 14  |           4 |             2 | dept - 2
     15 | emp - 15  |           5 |             1 | dept - 1
     15 | emp - 15  |           5 |             2 | dept - 2
     16 | emp - 16  |           6 |             1 | dept - 1
     16 | emp - 16  |           6 |             2 | dept - 2
     17 | emp - 17  |           7 |             1 | dept - 1
     17 | emp - 17  |           7 |             2 | dept - 2
     18 | emp - 18  |           8 |             1 | dept - 1
     18 | emp - 18  |           8 |             2 | dept - 2
     19 | emp - 19  |           9 |             1 | dept - 1
     19 | emp - 19  |           9 |             2 | dept - 2
     20 | emp - 20  |          10 |             1 | dept - 1
     20 | emp - 20  |          10 |             2 | dept - 2
     21 | emp - 21  |           1 |             1 | dept - 1
     21 | emp - 21  |           1 |             2 | dept - 2
     22 | emp - 22  |           2 |             1 | dept - 1
     22 | emp - 22  |           2 |             2 | dept - 2
     23 | emp - 23  |           3 |             1 | dept - 1
     23 | emp - 23  |           3 |             2 | dept - 2
     24 | emp - 24  |           4 |             1 | dept - 1
     24 | emp - 24  |           4 |             2 | dept - 2
     25 | emp - 25  |           5 |             1 | dept - 1
     25 | emp - 25  |           5 |             2 | dept - 2
     26 | emp - 26  |           6 |             1 | dept - 1
     26 | emp - 26  |           6 |             2 | dept - 2
     27 | emp - 27  |           7 |             1 | dept - 1
     27 | emp - 27  |           7 |             2 | dept - 2
     28 | emp - 28  |           8 |             1 | dept - 1
     28 | emp - 28  |           8 |             2 | dept - 2
     29 | emp - 29  |           9 |             1 | dept - 1
     29 | emp - 29  |           9 |             2 | dept - 2
     30 | emp - 30  |          10 |             1 | dept - 1
     30 | emp - 30  |          10 |             2 | dept - 2
     31 | emp - 31  |           1 |             1 | dept - 1
     31 | emp - 31  |           1 |             2 | dept - 2
     32 | emp - 32  |           2 |             1 | dept - 1
     32 | emp - 32  |           2 |             2 | dept - 2
     33 | emp - 33  |           3 |             1 | dept - 1
     33 | emp - 33  |           3 |             2 | dept - 2
     34 | emp - 34  |           4 |             1 | dept - 1
     34 | emp - 34  |           4 |             2 | dept - 2
     35 | emp - 35  |           5 |             1 | dept - 1
     35 | emp - 35  |           5 |             2 | dept - 2
     36 | emp - 36  |           6 |             1 | dept - 1
     36 | emp - 36  |           6 |             2 | dept - 2
     37 | emp - 37  |           7 |             1 | dept - 1
     37 | emp - 37  |           7 |             2 | dept - 2
     38 | emp - 38  |           8 |             1 | dept - 1
     38 | emp - 38  |           8 |             2 | dept - 2
     39 | emp - 39  |           9 |             1 | dept - 1
     39 | emp - 39  |           9 |             2 | dept - 2
     40 | emp - 40  |          10 |             1 | dept - 1
     40 | emp - 40  |          10 |             2 | dept - 2
     41 | emp - 41  |           1 |             1 | dept - 1
     41 | emp - 41  |           1 |             2 | dept - 2
     42 | emp - 42  |           2 |             1 | dept - 1
     42 | emp - 42  |           2 |             2 | dept - 2
     43 | emp - 43  |           3 |             1 | dept - 1
     43 | emp - 43  |           3 |             2 | dept - 2
     44 | emp - 44  |           4 |             1 | dept - 1
     44 | emp - 44  |           4 |             2 | dept - 2
     45 | emp - 45  |           5 |             1 | dept - 1
     45 | emp - 45  |           5 |             2 | dept - 2
     46 | emp - 46  |           6 |             1 | dept - 1
     46 | emp - 46  |           6 |             2 | dept - 2
     47 | emp - 47  |           7 |             1 | dept - 1
     47 | emp - 47  |           7 |             2 | dept - 2
     48 | emp - 48  |           8 |             1 | dept - 1
     48 | emp - 48  |           8 |             2 | dept - 2
     49 | emp - 49  |           9 |             1 | dept - 1
     49 | emp - 49  |           9 |             2 | dept - 2
     50 | emp - 50  |          10 |             1 | dept - 1
     50 | emp - 50  |          10 |             2 | dept - 2
     51 | emp - 51  |           1 |             1 | dept - 1
     51 | emp - 51  |           1 |             2 | dept - 2
     52 | emp - 52  |           2 |             1 | dept - 1
     52 | emp - 52  |           2 |             2 | dept - 2
     53 | emp - 53  |           3 |             1 | dept - 1
     53 | emp - 53  |           3 |             2 | dept - 2
     54 | emp - 54  |           4 |             1 | dept - 1
     54 | emp - 54  |           4 |             2 | dept - 2
     55 | emp - 55  |           5 |             1 | dept - 1
     55 | emp - 55  |           5 |             2 | dept - 2
     56 | emp - 56  |           6 |             1 | dept - 1
     56 | emp - 56  |           6 |             2 | dept - 2
     57 | emp - 57  |           7 |             1 | dept - 1
     57 | emp - 57  |           7 |             2 | dept - 2
     58 | emp - 58  |           8 |             1 | dept - 1
     58 | emp - 58  |           8 |             2 | dept - 2
     59 | emp - 59  |           9 |             1 | dept - 1
     59 | emp - 59  |           9 |             2 | dept - 2
     60 | emp - 60  |          10 |             1 | dept - 1
     60 | emp - 60  |          10 |             2 | dept - 2
     61 | emp - 61  |           1 |             1 | dept - 1
     61 | emp - 61  |           1 |             2 | dept - 2
     62 | emp - 62  |           2 |             1 | dept - 1
     62 | emp - 62  |           2 |             2 | dept - 2
     63 | emp - 63  |           3 |             1 | dept - 1
     63 | emp - 63  |           3 |             2 | dept - 2
     64 | emp - 64  |           4 |             1 | dept - 1
     64 | emp - 64  |           4 |             2 | dept - 2
     65 | emp - 65  |           5 |             1 | dept - 1
     65 | emp - 65  |           5 |             2 | dept - 2
     66 | emp - 66  |           6 |             1 | dept - 1
     66 | emp - 66  |           6 |             2 | dept - 2
     67 | emp - 67  |           7 |             1 | dept - 1
     67 | emp - 67  |           7 |             2 | dept - 2
     68 | emp - 68  |           8 |             1 | dept - 1
     68 | emp - 68  |           8 |             2 | dept - 2
     69 | emp - 69  |           9 |             1 | dept - 1
     69 | emp - 69  |           9 |             2 | dept - 2
     70 | emp - 70  |          10 |             1 | dept - 1
     70 | emp - 70  |          10 |             2 | dept - 2
     71 | emp - 71  |           1 |             1 | dept - 1
     71 | emp - 71  |           1 |             2 | dept - 2
     72 | emp - 72  |           2 |             1 | dept - 1
     72 | emp - 72  |           2 |             2 | dept - 2
     73 | emp - 73  |           3 |             1 | dept - 1
     73 | emp - 73  |           3 |             2 | dept - 2
     74 | emp - 74  |           4 |             1 | dept - 1
     74 | emp - 74  |           4 |             2 | dept - 2
     75 | emp - 75  |           5 |             1 | dept - 1
     75 | emp - 75  |           5 |             2 | dept - 2
     76 | emp - 76  |           6 |             1 | dept - 1
     76 | emp - 76  |           6 |             2 | dept - 2
     77 | emp - 77  |           7 |             1 | dept - 1
     77 | emp - 77  |           7 |             2 | dept - 2
     78 | emp - 78  |           8 |             1 | dept - 1
     78 | emp - 78  |           8 |             2 | dept - 2
     79 | emp - 79  |           9 |             1 | dept - 1
     79 | emp - 79  |           9 |             2 | dept - 2
     80 | emp - 80  |          10 |             1 | dept - 1
     80 | emp - 80  |          10 |             2 | dept - 2
     81 | emp - 81  |           1 |             1 | dept - 1
     81 | emp - 81  |           1 |             2 | dept - 2
     82 | emp - 82  |           2 |             1 | dept - 1
     82 | emp - 82  |           2 |             2 | dept - 2
     83 | emp - 83  |           3 |             1 | dept - 1
     83 | emp - 83  |           3 |             2 | dept - 2
     84 | emp - 84  |           4 |             1 | dept - 1
     84 | emp - 84  |           4 |             2 | dept - 2
     85 | emp - 85  |           5 |             1 | dept - 1
     85 | emp - 85  |           5 |             2 | dept - 2
     86 | emp - 86  |           6 |             1 | dept - 1
     86 | emp - 86  |           6 |             2 | dept - 2
     87 | emp - 87  |           7 |             1 | dept - 1
     87 | emp - 87  |           7 |             2 | dept - 2
     88 | emp - 88  |           8 |             1 | dept - 1
     88 | emp - 88  |           8 |             2 | dept - 2
     89 | emp - 89  |           9 |             1 | dept - 1
     89 | emp - 89  |           9 |             2 | dept - 2
     90 | emp - 90  |          10 |             1 | dept - 1
     90 | emp - 90  |          10 |             2 | dept - 2
     91 | emp - 91  |           1 |             1 | dept - 1
     91 | emp - 91  |           1 |             2 | dept - 2
     92 | emp - 92  |           2 |             1 | dept - 1
     92 | emp - 92  |           2 |             2 | dept - 2
     93 | emp - 93  |           3 |             1 | dept - 1
     93 | emp - 93  |           3 |             2 | dept - 2
     94 | emp - 94  |           4 |             1 | dept - 1
     94 | emp - 94  |           4 |             2 | dept - 2
     95 | emp - 95  |           5 |             1 | dept - 1
     95 | emp - 95  |           5 |             2 | dept - 2
     96 | emp - 96  |           6 |             1 | dept - 1
     96 | emp - 96  |           6 |             2 | dept - 2
     97 | emp - 97  |           7 |             1 | dept - 1
     97 | emp - 97  |           7 |             2 | dept - 2
     98 | emp - 98  |           8 |             1 | dept - 1
     98 | emp - 98  |           8 |             2 | dept - 2
     99 | emp - 99  |           9 |             1 | dept - 1
     99 | emp - 99  |           9 |             2 | dept - 2
    100 | emp - 100 |          10 |             1 | dept - 1
    100 | emp - 100 |          10 |             2 | dept - 2
(200 rows)

DELETE FROM employee WHERE emp_id = 10;
UPDATE employee SET emp_name = 'Updated emp' WHERE emp_id = 20;
SELECT emp_id, emp_name FROM employee WHERE emp_name like 'Updated emp' ORDER BY emp_id;
 emp_id |  emp_name   
--------+-------------
     20 | Updated emp
(1 row)

SELECT emp_id , emp_name , emp_dept_id FROM employee ORDER by emp_id LIMIT 10;
 emp_id | emp_name | emp_dept_id 
--------+----------+-------------
      1 | emp - 1  |           1
      2 | emp - 2  |           2
      3 | emp - 3  |           3
      4 | emp - 4  |           4
      5 | emp - 5  |           5
      6 | emp - 6  |           6
      7 | emp - 7  |           7
      8 | emp - 8  |           8
      9 | emp - 9  |           9
     11 | emp - 11 |           1
(10 rows)

SELECT emp_id , emp_name , emp_dept_id FROM employee WHERE emp_id IN (1) ORDER by emp_id;
 emp_id | emp_name | emp_dept_id 
--------+----------+-------------
      1 | emp - 1  |           1
(1 row)

SELECT emp_id , emp_name , emp_dept_id FROM employee WHERE emp_id IN (1,3,4,5) ORDER by emp_id;
 emp_id | emp_name | emp_dept_id 
--------+----------+-------------
      1 | emp - 1  |           1
      3 | emp - 3  |           3
      4 | emp - 4  |           4
      5 | emp - 5  |           5
(4 rows)

SELECT emp_id , emp_name , emp_dept_id FROM employee WHERE emp_id IN (10000,1000) ORDER by emp_id;
 emp_id | emp_name | emp_dept_id 
--------+----------+-------------
(0 rows)

SELECT emp_id , emp_name , emp_dept_id FROM employee WHERE emp_id NOT IN (1)  ORDER by emp_id LIMIT 5;
 emp_id | emp_name | emp_dept_id 
--------+----------+-------------
      2 | emp - 2  |           2
      3 | emp - 3  |           3
      4 | emp - 4  |           4
      5 | emp - 5  |           5
      6 | emp - 6  |           6
(5 rows)

SELECT emp_id , emp_name , emp_dept_id FROM employee WHERE emp_id NOT IN (1,3,4,5) ORDER by emp_id LIMIT 5;
 emp_id | emp_name | emp_dept_id 
--------+----------+-------------
      2 | emp - 2  |           2
      6 | emp - 6  |           6
      7 | emp - 7  |           7
      8 | emp - 8  |           8
      9 | emp - 9  |           9
(5 rows)

SELECT emp_id , emp_name , emp_dept_id FROM employee WHERE emp_id NOT IN (10000,1000) ORDER by emp_id LIMIT 5;
 emp_id | emp_name | emp_dept_id 
--------+----------+-------------
      1 | emp - 1  |           1
      2 | emp - 2  |           2
      3 | emp - 3  |           3
      4 | emp - 4  |           4
      5 | emp - 5  |           5
(5 rows)

SELECT emp_id , emp_name , emp_dept_id FROM employee WHERE emp_id NOT IN (SELECT emp_id FROM employee WHERE emp_id IN (1,10)) ORDER by emp_id;
 emp_id |  emp_name   | emp_dept_id 
--------+-------------+-------------
      2 | emp - 2     |           2
      3 | emp - 3     |           3
      4 | emp - 4     |           4
      5 | emp - 5     |           5
      6 | emp - 6     |           6
      7 | emp - 7     |           7
      8 | emp - 8     |           8
      9 | emp - 9     |           9
     11 | emp - 11    |           1
     12 | emp - 12    |           2
     13 | emp - 13    |           3
     14 | emp - 14    |           4
     15 | emp - 15    |           5
     16 | emp - 16    |           6
     17 | emp - 17    |           7
     18 | emp - 18    |           8
     19 | emp - 19    |           9
     20 | Updated emp |          10
     21 | emp - 21    |           1
     22 | emp - 22    |           2
     23 | emp - 23    |           3
     24 | emp - 24    |           4
     25 | emp - 25    |           5
     26 | emp - 26    |           6
     27 | emp - 27    |           7
     28 | emp - 28    |           8
     29 | emp - 29    |           9
     30 | emp - 30    |          10
     31 | emp - 31    |           1
     32 | emp - 32    |           2
     33 | emp - 33    |           3
     34 | emp - 34    |           4
     35 | emp - 35    |           5
     36 | emp - 36    |           6
     37 | emp - 37    |           7
     38 | emp - 38    |           8
     39 | emp - 39    |           9
     40 | emp - 40    |          10
     41 | emp - 41    |           1
     42 | emp - 42    |           2
     43 | emp - 43    |           3
     44 | emp - 44    |           4
     45 | emp - 45    |           5
     46 | emp - 46    |           6
     47 | emp - 47    |           7
     48 | emp - 48    |           8
     49 | emp - 49    |           9
     50 | emp - 50    |          10
     51 | emp - 51    |           1
     52 | emp - 52    |           2
     53 | emp - 53    |           3
     54 | emp - 54    |           4
     55 | emp - 55    |           5
     56 | emp - 56    |           6
     57 | emp - 57    |           7
     58 | emp - 58    |           8
     59 | emp - 59    |           9
     60 | emp - 60    |          10
     61 | emp - 61    |           1
     62 | emp - 62    |           2
     63 | emp - 63    |           3
     64 | emp - 64    |           4
     65 | emp - 65    |           5
     66 | emp - 66    |           6
     67 | emp - 67    |           7
     68 | emp - 68    |           8
     69 | emp - 69    |           9
     70 | emp - 70    |          10
     71 | emp - 71    |           1
     72 | emp - 72    |           2
     73 | emp - 73    |           3
     74 | emp - 74    |           4
     75 | emp - 75    |           5
     76 | emp - 76    |           6
     77 | emp - 77    |           7
     78 | emp - 78    |           8
     79 | emp - 79    |           9
     80 | emp - 80    |          10
     81 | emp - 81    |           1
     82 | emp - 82    |           2
     83 | emp - 83    |           3
     84 | emp - 84    |           4
     85 | emp - 85    |           5
     86 | emp - 86    |           6
     87 | emp - 87    |           7
     88 | emp - 88    |           8
     89 | emp - 89    |           9
     90 | emp - 90    |          10
     91 | emp - 91    |           1
     92 | emp - 92    |           2
     93 | emp - 93    |           3
     94 | emp - 94    |           4
     95 | emp - 95    |           5
     96 | emp - 96    |           6
     97 | emp - 97    |           7
     98 | emp - 98    |           8
     99 | emp - 99    |           9
    100 | emp - 100   |          10
(98 rows)

SELECT emp_id , emp_name , emp_dept_id FROM employee WHERE emp_name NOT IN ('emp - 1', 'emp - 2') ORDER by emp_id LIMIT 5;
 emp_id | emp_name | emp_dept_id 
--------+----------+-------------
      3 | emp - 3  |           3
      4 | emp - 4  |           4
      5 | emp - 5  |           5
      6 | emp - 6  |           6
      7 | emp - 7  |           7
(5 rows)

SELECT emp_id , emp_name , emp_dept_id FROM employee WHERE emp_name NOT IN ('emp - 10') ORDER by emp_id LIMIT 5;
 emp_id | emp_name | emp_dept_id 
--------+----------+-------------
      1 | emp - 1  |           1
      2 | emp - 2  |           2
      3 | emp - 3  |           3
      4 | emp - 4  |           4
      5 | emp - 5  |           5
(5 rows)

DELETE FROM employee;
DELETE FROM department;
CREATE FOREIGN TABLE countries (
_id NAME,
name VARCHAR,
population INTEGER,
capital VARCHAR,
hdi FLOAT
) SERVER mongo_server OPTIONS (database 'mongo_fdw_regress', collection 'countries');
SELECT * FROM countries ORDER BY _id;
           _id            |  name   | population | capital  |  hdi  
--------------------------+---------+------------+----------+-------
 5381ccf9d6d81c8e8bf0434f | Ukraine |   45590000 | Kyiv     |  0.74
 5381ccf9d6d81c8e8bf04350 | Poland  |   38540000 | Warsaw   | 0.821
 5381ccf9d6d81c8e8bf04351 | Moldova |    3560000 | Chișinău |  0.66
(3 rows)

-- 
-- Subfields and dates
CREATE FOREIGN TABLE country_elections (
_id NAME,
"lastElections.type" VARCHAR,
"lastElections.date" TIMESTAMP
) SERVER mongo_server OPTIONS (database 'mongo_fdw_regress', collection 'countries');
SELECT * FROM country_elections ORDER BY _id;
           _id            | lastElections.type |    lastElections.date    
--------------------------+--------------------+--------------------------
 5381ccf9d6d81c8e8bf0434f | presedential       | Sun May 25 00:00:00 2014
 5381ccf9d6d81c8e8bf04350 | parliamentary      | Sun Oct 09 00:00:00 2011
 5381ccf9d6d81c8e8bf04351 | parliamentary      | Sun Nov 28 00:00:00 2010
(3 rows)

-- 
-- Arrays
CREATE FOREIGN TABLE main_exports (
_id NAME,
"mainExports" TEXT[]
) SERVER mongo_server OPTIONS (database 'mongo_fdw_regress', collection 'countries');
SELECT * FROM main_exports ORDER BY _id;
           _id            |                                                                                         mainExports                                                                                         
--------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 5381ccf9d6d81c8e8bf0434f | {"Semi-finished products of iron or non-alloy steel","Flat-rolled products of iron or non-alloy steel","Sunflower-seed, safflower or cotton-seed oil"}
 5381ccf9d6d81c8e8bf04350 | {"Parts and accessories of the motor vehicles of headings 87.01 to 87.0","Motor cars and other motor vehicles principally designed for the transport","Reception apparatus for television"}
 5381ccf9d6d81c8e8bf04351 | {"Wine of fresh grapes, including fortified wines","Insulated (including enamelled or anodised) wire, cable","Sunflower seeds, whether or not broken"}
(3 rows)

-- __doc tests
-- the collection warehouse must contain the following data
-- use testdb;
-- db.warehouse.insert ({"_id" : ObjectId("58a1ebbaf543ec0b90545859"),"warehouse_id" : NumberInt(1),"warehouse_name" : "UPS","warehouse_created" : ISODate("2014-12-12T07:12:10Z")});
-- db.warehouse.insert ({"_id" : ObjectId("58a1ebbaf543ec0b9054585a"),"warehouse_id" : NumberInt(2),"warehouse_name" : "Laptop","warehouse_created" : ISODate("2015-11-11T08:13:10Z")});
CREATE FOREIGN TABLE test_json(__doc json) SERVER mongo_server OPTIONS (database 'testdb', collection 'warehouse');
CREATE FOREIGN TABLE test_jsonb(__doc jsonb) SERVER mongo_server OPTIONS (database 'testdb', collection 'warehouse');
CREATE FOREIGN TABLE test_text(__doc text) SERVER mongo_server OPTIONS (database 'testdb', collection 'warehouse');
CREATE FOREIGN TABLE test_varchar(__doc varchar) SERVER mongo_server OPTIONS (database 'testdb', collection 'warehouse');
SELECT * FROM test_json ORDER BY __doc::text COLLATE "C";
                                                                          __doc                                                                          
---------------------------------------------------------------------------------------------------------------------------------------------------------
 { "_id" : { "$oid" : "58a1ebbaf543ec0b90545859" }, "warehouse_id" : 1, "warehouse_name" : "UPS", "warehouse_created" : { "$date" : 1418368330000 } }
 { "_id" : { "$oid" : "58a1ebbaf543ec0b9054585a" }, "warehouse_id" : 2, "warehouse_name" : "Laptop", "warehouse_created" : { "$date" : 1447229590000 } }
(2 rows)

SELECT * FROM test_jsonb ORDER BY __doc::text COLLATE "C";
                                                                    __doc                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------
 {"_id": {"$oid": "58a1ebbaf543ec0b90545859"}, "warehouse_id": 1, "warehouse_name": "UPS", "warehouse_created": {"$date": 1418368330000}}
 {"_id": {"$oid": "58a1ebbaf543ec0b9054585a"}, "warehouse_id": 2, "warehouse_name": "Laptop", "warehouse_created": {"$date": 1447229590000}}
(2 rows)

SELECT * FROM test_text ORDER BY __doc::text COLLATE "C";
                                                                          __doc                                                                          
---------------------------------------------------------------------------------------------------------------------------------------------------------
 { "_id" : { "$oid" : "58a1ebbaf543ec0b90545859" }, "warehouse_id" : 1, "warehouse_name" : "UPS", "warehouse_created" : { "$date" : 1418368330000 } }
 { "_id" : { "$oid" : "58a1ebbaf543ec0b9054585a" }, "warehouse_id" : 2, "warehouse_name" : "Laptop", "warehouse_created" : { "$date" : 1447229590000 } }
(2 rows)

SELECT * FROM test_varchar ORDER BY __doc::text COLLATE "C";
                                                                          __doc                                                                          
---------------------------------------------------------------------------------------------------------------------------------------------------------
 { "_id" : { "$oid" : "58a1ebbaf543ec0b90545859" }, "warehouse_id" : 1, "warehouse_name" : "UPS", "warehouse_created" : { "$date" : 1418368330000 } }
 { "_id" : { "$oid" : "58a1ebbaf543ec0b9054585a" }, "warehouse_id" : 2, "warehouse_name" : "Laptop", "warehouse_created" : { "$date" : 1447229590000 } }
(2 rows)

-- where clause push down test
CREATE FOREIGN TABLE test_numbers(_id NAME, a int, b text) SERVER mongo_server OPTIONS (database 'testdb', collection 'test_numbers');
insert into test_numbers values('1', 1, 'One');
insert into test_numbers values('2', 2, 'Two');
insert into test_numbers values('3', 3, 'Three');
insert into test_numbers values('4', 4, 'Four');
insert into test_numbers values('5', 5, 'Five');
insert into test_numbers values('6', 6, 'Six');
insert into test_numbers values('7', 7, 'Seven');
insert into test_numbers values('8', 8, 'Eight');
insert into test_numbers values('9', 9, 'Nine');
insert into test_numbers values('10', 10, 'Ten');
create or replace function test_param_where() returns void as $$
DECLARE
  n varchar;
BEGIN
  FOR x IN 1..9 LOOP
    select b into n from test_numbers where a=x;
    raise notice 'Found Item %', n;
  end loop;
  return;
END
$$ LANGUAGE plpgsql;
SELECT test_param_where();
NOTICE:  Found Item One
NOTICE:  Found Item Two
NOTICE:  Found Item Three
NOTICE:  Found Item Four
NOTICE:  Found Item Five
NOTICE:  Found Item Six
NOTICE:  Found Item Seven
NOTICE:  Found Item Eight
NOTICE:  Found Item Nine
 test_param_where 
------------------
 
(1 row)

PREPARE test_where_pd(int) as SELECT b FROM test_numbers WHERE a =$1;
explain (verbose, costs false) execute test_where_pd(1);
                QUERY PLAN                
------------------------------------------
 Foreign Scan on public.test_numbers
   Output: b
   Filter: (test_numbers.a = 1)
   Foreign Namespace: testdb.test_numbers
(4 rows)

explain (verbose, costs false) execute test_where_pd(2);
                QUERY PLAN                
------------------------------------------
 Foreign Scan on public.test_numbers
   Output: b
   Filter: (test_numbers.a = 2)
   Foreign Namespace: testdb.test_numbers
(4 rows)

explain (verbose, costs false) execute test_where_pd(3);
                QUERY PLAN                
------------------------------------------
 Foreign Scan on public.test_numbers
   Output: b
   Filter: (test_numbers.a = 3)
   Foreign Namespace: testdb.test_numbers
(4 rows)

explain (verbose, costs false) execute test_where_pd(4);
                QUERY PLAN                
------------------------------------------
 Foreign Scan on public.test_numbers
   Output: b
   Filter: (test_numbers.a = 4)
   Foreign Namespace: testdb.test_numbers
(4 rows)

explain (verbose, costs false) execute test_where_pd(5);
                QUERY PLAN                
------------------------------------------
 Foreign Scan on public.test_numbers
   Output: b
   Filter: (test_numbers.a = 5)
   Foreign Namespace: testdb.test_numbers
(4 rows)

explain (verbose, costs false) execute test_where_pd(6);
                QUERY PLAN                
------------------------------------------
 Foreign Scan on public.test_numbers
   Output: b
   Filter: (test_numbers.a = $1)
   Foreign Namespace: testdb.test_numbers
(4 rows)

explain (verbose, costs false) execute test_where_pd(7);
                QUERY PLAN                
------------------------------------------
 Foreign Scan on public.test_numbers
   Output: b
   Filter: (test_numbers.a = $1)
   Foreign Namespace: testdb.test_numbers
(4 rows)

explain (verbose, costs false) execute test_where_pd(8);
                QUERY PLAN                
------------------------------------------
 Foreign Scan on public.test_numbers
   Output: b
   Filter: (test_numbers.a = $1)
   Foreign Namespace: testdb.test_numbers
(4 rows)

explain (verbose, costs false) execute test_where_pd(9);
                QUERY PLAN                
------------------------------------------
 Foreign Scan on public.test_numbers
   Output: b
   Filter: (test_numbers.a = $1)
   Foreign Namespace: testdb.test_numbers
(4 rows)

execute test_where_pd(1);
  b  
-----
 One
(1 row)

execute test_where_pd(2);
  b  
-----
 Two
(1 row)

execute test_where_pd(3);
   b   
-------
 Three
(1 row)

execute test_where_pd(4);
  b   
------
 Four
(1 row)

execute test_where_pd(5);
  b   
------
 Five
(1 row)

execute test_where_pd(6);
  b  
-----
 Six
(1 row)

execute test_where_pd(7);
   b   
-------
 Seven
(1 row)

execute test_where_pd(8);
   b   
-------
 Eight
(1 row)

execute test_where_pd(9);
  b   
------
 Nine
(1 row)

--
-- fdw-108: After a change to a pg_foreign_server or pg_user_mapping catalog
-- entry, connection should be invalidated.
--
-- Alter one of the SERVER option
-- Set wrong address for mongo_server
ALTER SERVER mongo_server OPTIONS (SET address '127.0.0.5');
-- Should fail with an error
INSERT INTO test_numbers VALUES ('11', 11, 'Eleven');
ERROR:  could not connect to server mongo_server
HINT:  Mongo error: "No suitable servers found (`serverSelectionTryOnce` set): [connection refused calling ismaster on '127.0.0.5:27017']"
UPDATE test_numbers SET a = 11 WHERE a = 10;
ERROR:  could not connect to server mongo_server
HINT:  Mongo error: "No suitable servers found (`serverSelectionTryOnce` set): [connection refused calling ismaster on '127.0.0.5:27017']"
DELETE FROM test_numbers WHERE a = 10;
ERROR:  could not connect to server mongo_server
HINT:  Mongo error: "No suitable servers found (`serverSelectionTryOnce` set): [connection refused calling ismaster on '127.0.0.5:27017']"
SELECT * FROM test_numbers;
ERROR:  could not connect to server mongo_server
HINT:  Mongo error: "No suitable servers found (`serverSelectionTryOnce` set): [connection refused calling ismaster on '127.0.0.5:27017']"
-- Set correct address for mongo_server
ALTER SERVER mongo_server OPTIONS (SET address '127.0.0.1');
-- Should able to insert the data
INSERT INTO test_numbers VALUES ('12', 12, 'Twelve');
-- Change the user mapping options
-- Set wrong username, password for postgres user
DROP USER MAPPING FOR postgres SERVER mongo_server;
CREATE USER MAPPING FOR postgres SERVER mongo_server OPTIONS (username 'wrong', password 'wrong');
-- Should fail with an error
INSERT INTO test_numbers VALUES ('13', 13, 'Thirteen');
ERROR:  could not connect to server mongo_server
HINT:  Mongo error: "Authentication failed."
UPDATE test_numbers SET a = 11 WHERE a = 10;
ERROR:  could not connect to server mongo_server
HINT:  Mongo error: "Authentication failed."
DELETE FROM test_numbers WHERE a = 10;
ERROR:  could not connect to server mongo_server
HINT:  Mongo error: "Authentication failed."
SELECT * FROM test_numbers;
ERROR:  could not connect to server mongo_server
HINT:  Mongo error: "Authentication failed."
-- Set default username, password for postgres user
DROP USER MAPPING FOR postgres SERVER mongo_server;
CREATE USER MAPPING FOR postgres SERVER mongo_server;
-- Should able to insert the data
INSERT INTO test_numbers VALUES ('14', 14, 'Fourteen');
-- FDW-158: Fix server crash when analyzing a foreign table.
SELECT reltuples FROM pg_class WHERE relname = 'test_numbers';
 reltuples 
-----------
         0
(1 row)

ANALYZE test_numbers;
-- Should give correct number of rows now.
SELECT reltuples FROM pg_class WHERE relname = 'test_numbers';
 reltuples 
-----------
        12
(1 row)

-- Check with this...
SELECT count(*) FROM test_numbers;
 count 
-------
    12
(1 row)

DELETE FROM test_numbers;
DROP FOREIGN TABLE test_numbers;
DROP FOREIGN TABLE test_json;
DROP FOREIGN TABLE test_jsonb;
DROP FOREIGN TABLE test_text;
DROP FOREIGN TABLE test_varchar;
DROP FOREIGN TABLE department;
DROP FOREIGN TABLE employee;
DROP FOREIGN TABLE countries;
DROP FOREIGN TABLE country_elections;
DROP FOREIGN TABLE main_exports;
DROP USER MAPPING FOR postgres SERVER mongo_server;
DROP EXTENSION mongo_fdw CASCADE;
NOTICE:  drop cascades to server mongo_server
